plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

/*buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge maven'
            url = 'https://maven.minecraftforge.net/'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven-publish'*/

version = "${minecraft_version}-${mod_version}"
group = 'stormedpanda.simplyjetpacks'
archivesBaseName = "SimplyJetpacks2"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "${mappings_version}", version: "${minecraft_version}"

    //makeObfSourceJar = false
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Needed for Patchouli in dev. TODO: is it still needed?
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'simplyjetpacks'

            mods {
                simplyjetpacks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'simplyjetpacks'

            mods {
                simplyjetpacks {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'simplyjetpacks'

            mods {
                simplyjetpacks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'simplyjetpacks'

            args '--mod', 'simplyjetpacks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing', file('src/generated/resources/')

            mods {
                simplyjetpacks {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "mod maven"
        url = "https://modmaven.dev/"
    }
    maven {
        name = "progwm16 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "tterrag maven"
        url = "https://maven.tterrag.com/"
    }
    maven {
        name = "blamejared maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "curse maven"
        url = "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "theillusivec4 maven"
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

//    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
//    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    // FIXME: Patchouli breaks data gen, comment out before using `runData`.
//    runtimeOnly fg.deobf("curse.maven:patchouli-306770:3846086")

//    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}:api")
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"))
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

//    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:${top_version}:api")
//    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.17:${top_version}")
//    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:3871444")

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}+${minecraft_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}+${minecraft_version}")

    //runtimeOnly fg.deobf("curse.maven:cofhcore-69162:3621734")
    //runtimeOnly fg.deobf("curse.maven:thermalfoundation-222880:3621736")
    //runtimeOnly fg.deobf("curse.maven:thermalexpansion-69163:3607549")
    //runtimeOnly fg.deobf("curse.maven:thermalinnovation-291737:3556270")
//    runtimeOnly fg.deobf("curse.maven:thermal-dynamics-227443:x")
    //runtimeOnly fg.deobf("curse.maven:redstone-arsenal-70631:3621740")
    //runtimeOnly fg.deobf("curse.maven:redstone-repository-revolved-300750:3622366")

    //compileOnly fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}:api")
    //runtimeOnly fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}")
    //runtimeOnly fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}:additions")
    //runtimeOnly fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}:generators")
    //runtimeOnly fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}:tools")

    // FIXME: Immersive Engineering breaks data gen, comment out before using `runData`.
    //runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${immersiveengineering_version}")

    //runtimeOnly fg.deobf("curse.maven:configured-457570:3903908")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "simplyjetpacks",
                "Specification-Vendor": "stormedpanda",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor":"stormedpanda",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
